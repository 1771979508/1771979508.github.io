<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[hexo个人博客从0到1]]></title>
    <url>%2F2019%2F05%2F02%2Fhexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%BB%8E0%E5%88%B01%2F</url>
    <content type="text"><![CDATA[写在开始这篇文章主要记录这两天倒腾的hexo个人博客系统从0到1的过程。 平台虽说是基于windows平台的搭建,但是很多命令都是一样的，所以想在Linux里面尝试的不妨倒腾两手 正文 Git的安装git是个好工具，和svn一样主要用于版本控制，我们需要在 git bush里面进行命令行的操作。有关git的相关知识可以到廖雪峰的网站进行学习； NodeJS的安装NodeJS也是个好东西，这玩意儿居然能写js的后端，一句话流批。NodeJS主要是用来管理和配置npm包的，安装完成需要配置一下环境变量，然后打开cmd，输入会有对应的版本号 12node -vnpm -v hexo的安装安装好工具之后开始操作：首先建立一个hexo文件的目录；例如在D盘根目录新建hexo文件夹，然后cd到该目录下，开始安装。 1234567$ cd D:hexo/ #换成你的目录$ npm install -g hexo-cli #安装hexo脚手架$ hexo init #Hexo自动在当前文件夹下下载搭建网站所需的所有文件$ npm install #安装依赖包$ hexo g #完整命令为hexo generate，生成静态文件$ hexo s #完整命令为hexo server，启动服务器，用来本地预览 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 然后localhost:4000(默认开启4000端口)就能看到自己的静态资源站了 调整相关hexo样式这里一般就是先选好自己想用哪个主题样式用npm包clone下来，然后在主题文件夹下的配置文件改。如：日期啊，分页啊，用哪种样式等等，这里就不一一介绍了。这里可以参考hexo官网，看看它的目录结构以及受欢迎的主题。我看很多人用的Next主题，简洁而不简单 蛮不错的。 到这里应该都能访问到本机服务上的博客了。接下来主要做的就是将本地代码部署到远端GitHub上去。 部署到GitHub上并解析自己的域名 建立仓库值得注意的是，这里命名规则是账号名.github.io这个是后面你访问的域名(如果不绑定自己的域名的话) 设置git的名字和邮箱设置命令 1git config --global user.name &apos;账号名&apos; 查看是否设置成功的命令 1git config --global user.name 邮箱同理 1git config --global user.email &apos;邮箱&apos; 配置SSH密匙配置密匙命令 1ssh-keygen -t rsa -C &apos;邮箱名&apos; 查看是否设置成功 1ssh -T git@github.com 打开生成好密匙的文件id_rsa.pub，进入GitHubsetting--&gt;SSH and GPG keys--&gt;New SSH key复制粘贴保存 部署打开D:\hexo，用sublime或者VS code打开根目录下的_config.yml文件，文件最后可以看到 12deploy: type: 修改其配置 1234deploy: type: git repository: git@github.com:yourname/yourname.github.io.git #发布到github branch: master 然后就是一套,你可以选择将它们写到bat脚本执行文件里面去 123$ hexo clean$ hexo g$ hexo d 当然这里如果你没有安装部署的命令的话需要如下操作 1$ npm install hexo-deployer-git --save 这时，你就可以在浏览器里面输入https://yourname.github.io来进行访问你的博客了; 将域名解析到对应的GitHub仓库地址(可选)如果你有自己的域名的话或者你想拿自己的域名做链接的话，你需要到对应的云平台域名解析设置两条www和@的解析设置,其中记录类型为CNAME和记录值为账号名.github.io。进入{yourname}.github.io仓库--&gt;Settings-&gt;GitHub Pages保存好域名即可。到D:\hexo\sourse目录下（即你安装hexo的目录下的sourse目录下）新建文件CNAME，用Sublime或者VS code打开,填入你的域名，如jokerq.com，保存。然后到D:\hexo目录下用sublime打开_config.yml，ctrl+f查找skip_render，然后改为 123skip_render: - README.md - CNAME 最后就是执行你的bat文件，大功告成!]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>静态博客系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F05%2F02%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
  <entry>
    <title><![CDATA[逍惆]]></title>
    <url>%2F2019%2F04%2F28%2Fmarkdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95%E7%9A%84%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[小丑的世界逍惆的第一篇blog 列表1 列表2 a 子列表 b 子列表 列表3 小丑的世界 字体变斜 字体加粗 &lt;html&gt;&lt;/html&gt; 12345678&lt;html&gt; &lt;head&gt; &lt;title&gt;我是代码片段&lt;/title&gt; &lt;/head&gt; &lt;body&gt; conole.log(我是打印的函数); &lt;/body&gt;&lt;/html&gt; 引用别人的代码]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>导航</tag>
        <tag>分享</tag>
      </tags>
  </entry>
</search>
